{"version":3,"sources":["assets/images/she_move.jpg","assets/songs/she_move.mp3","assets/images/nikle_current.jpg","assets/songs/nikle_currant.mp3","assets/images/qaafirana.jpg","assets/songs/qaafirana.mp3","components/Menu.js","components/Games.js","components/Setting.js","components/Coverflow.js","components/Music.js","components/Artist.js","components/Album.js","components/AllMusic.js","components/Playing.js","components/MoreSettings.js","components/Themes.js","components/Screen.js","actions/component.js","actions/actionTypes.js","actions/song.js","components/Buttons.js","actions/theme.js","components/Ipod.js","components/App.js","reducers/component.js","data/song.js","reducers/song.js","data/themes.js","reducers/theme.js","reducers/index.js","index.js","store/index.js"],"names":["module","exports","Menu","this","props","activeItem","styles","className","style","menu","active","Component","connect","state","theme","Games","Setting","component","Coverflow","Music","Artist","Album","AllMusic","Playing","playSong","activeSong","song","play","pauseSong","pause","currentSongDuration","songDurationInterval","width","setState","currentTime","setInterval","time","duration","minute","Math","floor","second","clearInterval","playing","image","name","totalSongDurationMinute","totalSongDurationSecond","totalSongDuration","src","alt","isSongPlaying","MoreSettings","Themes","Screen","activeComponent","changeComponent","type","changeActiveItem","item","changeSong","Buttons","handleMenuButton","dispatch","handlePausePlayButton","handleCenterButton","load","handleBackwardButton","handleForwardButton","forwardMoveMenuComponent","backwardMoveMenuComponent","forwardMoveMusicComponent","backwardMoveMusicComponent","forwardMoveSettingComponent","backwardMoveSettingComponent","forwardMoveThemesComponent","backwardMoveThemesComponent","forwardMoveAllMusicComponent","backwardMoveAllMusicComponent","rotate","target","angleChange","distance","oldThis","region","bind","event","currentDistance","detail","distanceFromLast","rotateUsingZing","defined","inner","current","zingRegion","React","createRef","ZingTouch","Region","ref","onMouseOver","onClick","circle_background","Ipod","ipod_background","App","background","initialState","she_move","she_move_img","Audio","she_move_song","qaafirana","qaafirana_img","qaafirana_song","nikle_currant","nikle_current_img","nikle_currant_song","marshmello","backgroundColor","backgroundImage","color","striker","virtue","combineReducers","action","currentSong","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,2WCOrCC,G,kLACM,IAAD,EACwBC,KAAKC,MAA5BC,EADD,EACCA,WAAYC,EADb,EACaA,OACpB,OACE,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,OAAOC,MAAOF,EAAOG,MAClC,yBAAKF,UAAU,gBAAf,QACA,wBAAIA,UAAU,uBACI,cAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,aAIA,wBAAIH,UAAU,kBAAd,aAEc,UAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,SAIA,wBAAIH,UAAU,kBAAd,SAEc,UAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,SAIA,wBAAIH,UAAU,kBAAd,SAEc,YAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,WAIA,wBAAIH,UAAU,kBAAd,kB,GAlCKI,cAgDJC,mBALf,SAAyBC,GACvB,MAAO,CACLP,OAAQO,EAAMC,MAAML,QAGTG,CAAyBV,GC9CzBa,G,MAJD,WACZ,OAAO,yBAAKR,UAAU,4CCAlBS,E,uKACM,IAAD,EACwBb,KAAKC,MAA5BC,EADD,EACCA,WAAYC,EADb,EACaA,OACpB,OACE,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,OAAOC,MAAOF,EAAOG,MAClC,yBAAKF,UAAU,gBAAf,WACA,wBAAIA,UAAU,uBACI,WAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,UAIA,wBAAIH,UAAU,kBAAd,UAEc,kBAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,iBAIA,wBAAIH,UAAU,kBAAd,wB,GApBQI,aAoCPC,mBAPf,SAAyBC,GACvB,MAAO,CACLP,OAAQO,EAAMC,MAAML,KACpBJ,WAAYQ,EAAMI,UAAUZ,cAIjBO,CAAyBI,GClCzBE,G,MAHG,WAChB,OAAO,yBAAKX,UAAU,gDCClBY,E,uKACM,IAAD,EACwBhB,KAAKC,MAA5BC,EADD,EACCA,WAAYC,EADb,EACaA,OACpB,OACE,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,OAAOC,MAAOF,EAAOG,MAClC,yBAAKF,UAAU,gBAAf,SACA,wBAAIA,UAAU,uBACI,gBAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,eAIA,wBAAIH,UAAU,kBAAd,eAEc,cAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,aAIA,wBAAIH,UAAU,kBAAd,aAEc,WAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,UAIA,wBAAIH,UAAU,kBAAd,UAEc,UAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,SAIA,wBAAIH,UAAU,kBAAd,gB,GAlCMI,aAiDLC,mBANf,SAAyBC,GACvB,MAAO,CACLP,OAAQO,EAAMC,MAAML,QAITG,CAAyBO,GC/CzBC,G,MAJA,WACb,OAAO,yBAAKb,UAAU,6CCGTc,G,MAJD,WACZ,OAAO,yBAAKd,UAAU,4CCAlBe,E,uKACM,IAAD,EACwBnB,KAAKC,MAA5BC,EADD,EACCA,WAAYC,EADb,EACaA,OACpB,OACE,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,OAAOC,MAAOF,EAAOG,MAClC,yBAAKF,UAAU,gBAAf,SACA,wBAAIA,UAAU,uBACI,aAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,YAIA,wBAAIH,UAAU,kBAAd,YAEc,cAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,aAIA,wBAAIH,UAAU,kBAAd,aAEc,kBAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,iBAIA,wBAAIH,UAAU,kBAAd,wB,GA3BSI,aA2CRC,mBAPf,SAAyBC,GACvB,MAAO,CACLP,OAAQO,EAAMC,MAAML,KACpBJ,WAAYQ,EAAMI,UAAUZ,cAIjBO,CAAyBU,GC5ClCC,G,wDACJ,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAiDRoB,SAAW,WACQ,EAAKpB,MAAMqB,WAApBC,KACHC,QApDY,EAwDnBC,UAAY,WACO,EAAKxB,MAAMqB,WAApBC,KACHG,SAxDL,EAAKhB,MAAQ,CACXiB,oBAAqB,EACrBC,qBAAsB,GACtBC,MAAO,CACLA,MAAO,OANM,E,gEAaE,IAAD,OACVN,EAASvB,KAAKC,MAAMqB,WAApBC,KACRvB,KAAK8B,SAAS,CAAEH,oBAAqBJ,EAAKQ,cAC1C/B,KAAK4B,qBAAuBI,aAAY,WAAO,IACrCT,EAAS,EAAKtB,MAAMqB,WAApBC,KACJU,EAAOV,EAAKQ,YAEZF,EAASI,EAAOV,EAAKW,SAAY,IAAM,IACvCC,EAASC,KAAKC,MAAMJ,EAAO,IAC3BK,EAASF,KAAKC,MAAMJ,EAAO,IAC3BE,EAAS,KACXA,EAAS,IAAMA,GAEbG,EAAS,KACXA,EAAS,IAAMA,GAEjB,IAAIP,EAAcI,EAAS,IAAMG,EACjC,EAAKR,SAAS,CAAEC,YAAaA,EAAaF,MAAO,CAAEA,MAAOA,OACzD,O,6CAKHU,cAAcvC,KAAK4B,wB,2CAKC5B,KAAKC,MAAjBuC,QAENxC,KAAKqB,WAELrB,KAAKyB,c,+BAiBA,IAECe,EAAYxC,KAAKC,MAAjBuC,QAFD,EAGuBxC,KAAKC,MAAMqB,WAAjCC,EAHD,EAGCA,KAAMkB,EAHP,EAGOA,MAAOC,EAHd,EAGcA,KACjBC,EAA0BP,KAAKC,MAAMd,EAAKW,SAAW,IACrDU,EAA0BR,KAAKC,MAAMd,EAAKW,SAAW,IACrDS,EAA0B,KAC5BA,EAA0B,IAAMA,GAE9BC,EAA0B,KAC5BA,EAA0B,IAAMA,GAElC,IAAIC,EACFF,EAA0B,IAAMC,EAC9BjB,EAAsB3B,KAAKU,MAAMqB,YACrC,OACE,yBAAK3B,UAAU,2CACb,yBAAKA,UAAU,mBAAf,SACA,yBAAKA,UAAU,sBACb,yBAAK0C,IAAKL,EAAOM,IAAI,gBAEvB,yBAAK3C,UAAU,aAAasC,GAC5B,yBAAKtC,UAAU,kBACZoC,EACC,yBACEM,IAAI,wDACJC,IAAI,iBAGN,yBACED,IAAI,wDACJC,IAAI,iBAIV,yBAAK3C,UAAU,gBACZuB,EADH,IACyBkB,GAEzB,yBAAKzC,UAAU,eAAeC,MAAOL,KAAKU,MAAMmB,a,GArGlCrB,cAoHPC,mBARf,SAAyBC,GACvB,MAAO,CACL8B,QAAS9B,EAAMa,KAAKyB,cACpB1B,WAAYZ,EAAMa,KAAKD,cAKZb,CAAyBW,GChHzB6B,G,MAJM,WACnB,OAAO,yBAAK7C,UAAU,oDCDlB8C,E,uKACM,IAAD,EACwBlD,KAAKC,MAA5BC,EADD,EACCA,WAAYC,EADb,EACaA,OACpB,OACE,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,OAAOC,MAAOF,EAAOG,MAClC,yBAAKF,UAAU,gBAAf,WACA,wBAAIA,UAAU,uBACI,eAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,cAIA,wBAAIH,UAAU,kBAAd,cAEc,YAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,WAIA,wBAAIH,UAAU,kBAAd,WAEc,WAAfF,EACC,wBAAIE,UAAU,wBAAwBC,MAAOF,EAAOI,QAApD,UAIA,wBAAIH,UAAU,kBAAd,iB,GA3BOI,aA2CNC,mBAPf,SAAyBC,GACvB,MAAO,CACLP,OAAQO,EAAMC,MAAML,KACpBJ,WAAYQ,EAAMI,UAAUZ,cAIjBO,CAAyByC,GC/BlCC,G,6KACM,IAAD,EACiCnD,KAAKC,MAArCmD,EADD,EACCA,gBAAiBlD,EADlB,EACkBA,WACzB,OACE,yBAAKE,UAAU,oBACQ,cAApBgD,GAAmC,kBAAC,EAAD,MACf,SAApBA,GAA8B,kBAAC,EAAD,CAAMlD,WAAYA,IAC5B,UAApBkD,GAA+B,kBAAC,EAAD,CAAOlD,WAAYA,IAC9B,UAApBkD,GAA+B,kBAAC,EAAD,MACX,YAApBA,GAAiC,kBAAC,EAAD,MACb,WAApBA,GAAgC,kBAAC,EAAD,MACZ,UAApBA,GAA+B,kBAAC,EAAD,MACX,cAApBA,GAAmC,kBAAC,EAAD,MACf,kBAApBA,GAAuC,kBAAC,EAAD,MACnB,WAApBA,GAAgC,kBAAC,EAAD,MACZ,gBAApBA,GAAqC,kBAAC,EAAD,W,GAfzB5C,cA8BNC,mBARf,SAAyBC,GACvB,MAAO,CACL0C,gBAAiB1C,EAAMI,UAAUsC,gBACjClD,WAAYQ,EAAMI,UAAUZ,cAKjBO,CAAyB0C,G,+BC5CjC,SAASE,EAAgBvC,GAC9B,MAAO,CACLwC,KCJ4B,mBDK5BxC,aAKG,SAASyC,EAAiBC,GAC/B,MAAO,CACLF,KCX8B,qBDY9BE,QEGG,SAASC,EAAWlC,GACzB,MAAO,CACL+B,KDVuB,cCWvB/B,Q,ICNEmC,E,kDACJ,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAqBR0D,iBAAmB,WACjB,EAAK1D,MAAM2D,SAASP,EAAgB,UAvBnB,EA2BnBQ,sBAAwB,WAAO,IAAD,EACE,EAAK5D,MAA3BuC,EADoB,EACpBA,QAASoB,EADW,EACXA,SAEO,gBADI,EAAK3D,MAAMa,UAA/BsC,iBAKNQ,GADc,IAAZpB,EDrCC,CACLc,KDNsB,cCFjB,CACLA,KDAqB,eEUJ,EAwCnBQ,mBAAqB,WAAO,IAAD,EACK,EAAK7D,MAA3B2D,EADiB,EACjBA,SAAUpB,EADO,EACPA,QADO,EAEe,EAAKvC,MAAMa,UAA3CsC,EAFiB,EAEjBA,gBAAiBlD,EAFA,EAEAA,WAEzB,GAAwB,gBAApBkD,GAOG,GACe,SAApBA,GACoB,UAApBA,GACoB,YAApBA,EAEAQ,EAASP,EAAgBnD,SACpB,GAAwB,WAApBkD,EACTQ,ECrEG,CACLN,KHOwB,eGNxB3C,MDmEuBT,SAChB,GAAwB,cAApBkD,EAAiC,CAC1CQ,EAASH,EAAWvD,IACH,EAAKD,MAAMsB,KAApBA,KACHwC,OACLH,EAASP,EAAgB,sBAjBvBO,GADc,IAAZpB,EDjDD,CACLc,KDNsB,cCFjB,CACLA,KDAqB,eEUJ,EAoEnBU,qBAAuB,WAAO,IACpBJ,EAAa,EAAK3D,MAAlB2D,SACAR,EAAoB,EAAKnD,MAAMa,UAA/BsC,gBACA7B,EAAS,EAAKtB,MAAMsB,KAApBA,KACR,GAAwB,gBAApB6B,EAAmC,CACrC7B,EAAKwC,OADgC,IAE7BrB,EAAS,EAAKzC,MAAMsB,KAApBmB,KACK,aAATA,EACFkB,EAASH,EAAW,kBACF,cAATf,EACTkB,EAASH,EAAW,aACF,kBAATf,GACTkB,EAASH,EAAW,gBAhFP,EAsFnBQ,oBAAsB,WAAO,IACnBL,EAAa,EAAK3D,MAAlB2D,SACAR,EAAoB,EAAKnD,MAAMa,UAA/BsC,gBACA7B,EAAS,EAAKtB,MAAMsB,KAApBA,KACR,GAAwB,gBAApB6B,EAAmC,CACrC7B,EAAKwC,OADgC,IAE7BrB,EAAS,EAAKzC,MAAMsB,KAApBmB,KACK,aAATA,EACFkB,EAASH,EAAW,cACF,cAATf,EACTkB,EAASH,EAAW,kBACF,kBAATf,GACTkB,EAASH,EAAW,eAlGP,EAwGnBS,yBAA2B,WAAO,IACxBN,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,cAAfA,EACF0D,EAASL,EAAiB,UACF,UAAfrD,EACT0D,EAASL,EAAiB,UACF,UAAfrD,EACT0D,EAASL,EAAiB,YACF,YAAfrD,GACT0D,EAASL,EAAiB,eAlHX,EAuHnBY,0BAA4B,WAAO,IACzBP,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,cAAfA,EACF0D,EAASL,EAAiB,YACF,UAAfrD,EACT0D,EAASL,EAAiB,cACF,UAAfrD,EACT0D,EAASL,EAAiB,UACF,YAAfrD,GACT0D,EAASL,EAAiB,WAjIX,EAsInBa,0BAA4B,WAAO,IACzBR,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,gBAAfA,EACF0D,EAASL,EAAiB,cACF,cAAfrD,EACT0D,EAASL,EAAiB,WACF,WAAfrD,EACT0D,EAASL,EAAiB,UACF,UAAfrD,GACT0D,EAASL,EAAiB,iBAhJX,EAqJnBc,2BAA6B,WAAO,IAC1BT,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,gBAAfA,EACF0D,EAASL,EAAiB,UACF,cAAfrD,EACT0D,EAASL,EAAiB,gBACF,WAAfrD,EACT0D,EAASL,EAAiB,cACF,UAAfrD,GACT0D,EAASL,EAAiB,YA/JX,EAoKnBe,4BAA8B,WAAO,IAC3BV,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,WAAfA,EACF0D,EAASL,EAAiB,kBACF,kBAAfrD,GACT0D,EAASL,EAAiB,YA1KX,EA+KnBgB,6BAA+B,WAAO,IAC5BX,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,WAAfA,EACF0D,EAASL,EAAiB,kBACF,kBAAfrD,GACT0D,EAASL,EAAiB,YArLX,EA0LnBiB,2BAA6B,WAAO,IAC1BZ,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,eAAfA,EACF0D,EAASL,EAAiB,YACF,YAAfrD,EACT0D,EAASL,EAAiB,WACF,WAAfrD,GACT0D,EAASL,EAAiB,gBAlMX,EAuMnBkB,4BAA8B,WAAO,IAC3Bb,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,eAAfA,EACF0D,EAASL,EAAiB,WACF,YAAfrD,EACT0D,EAASL,EAAiB,eACF,WAAfrD,GACT0D,EAASL,EAAiB,aA/MX,EAoNnBmB,6BAA+B,WAAO,IAC5Bd,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,aAAfA,EACF0D,EAASL,EAAiB,cACF,cAAfrD,EACT0D,EAASL,EAAiB,kBACF,kBAAfrD,GACT0D,EAASL,EAAiB,cA5NX,EAiOnBoB,8BAAgC,WAAO,IAC7Bf,EAAa,EAAK3D,MAAlB2D,SACA1D,EAAe,EAAKD,MAAMa,UAA1BZ,WACW,aAAfA,EACF0D,EAASL,EAAiB,kBACF,cAAfrD,EACT0D,EAASL,EAAiB,aACF,kBAAfrD,GACT0D,EAASL,EAAiB,eAzOX,EA+OnBqB,OAAS,SAACC,GACR,IAAIC,EAAc,EACdC,EAAW,EAEXC,EAAO,eAGX,EAAKC,OAAOC,KAAKL,EAAQ,UAAU,SAAUM,GAC3C,IAAIC,EAAkBD,EAAME,OAAOC,iBAenC,GAdiB,IAAbP,EACFA,EAAWK,GAEPA,EAAkB,GAAKL,EAAW,GAG3BK,EAAkB,GAAKL,EAAW,KAF3CD,EAAc,EACdC,EAAW,GASK,OAHpBD,EAGwB,CACtBA,EAAc,EADQ,IAEd1B,EAAoB4B,EAAQ/E,MAAMa,UAAlCsC,gBACJ2B,EAAW,EAGW,SAApB3B,EACF4B,EAAQb,4BACqB,UAApBf,EACT4B,EAAQX,6BACqB,YAApBjB,EACT4B,EAAQT,+BACqB,WAApBnB,EACT4B,EAAQP,8BACqB,cAApBrB,GACT4B,EAAQL,gCAGc,SAApBvB,EACF4B,EAAQd,2BACqB,UAApBd,EACT4B,EAAQZ,4BACqB,YAApBhB,EACT4B,EAAQV,8BACqB,WAApBlB,EACT4B,EAAQR,6BACqB,cAApBpB,GACT4B,EAAQN,oCAjSC,EAySnBa,gBAAkB,YACK,IAAjB,EAAKC,UACP,EAAKA,SAAU,EACf,EAAKZ,OAAO,EAAKa,MAAMC,WAzSzB,EAAKF,SAAU,EAEf,EAAKG,WAAaC,IAAMC,YACxB,EAAKZ,OAAS,KAEd,EAAKQ,MAAQG,IAAMC,YARF,E,gEAajB7F,KAAKiF,OAAS,IAAIa,IAAUC,OAAO/F,KAAK2F,WAAWD,W,6CAKnD1F,KAAKwF,SAAU,I,+BA+RP,IACArF,EAAWH,KAAKC,MAAhBE,OACR,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,0BAA0B4F,IAAKhG,KAAK2F,YACjD,yBACEvF,UAAU,yBACV6F,YAAajG,KAAKuF,gBAClBS,IAAKhG,KAAKyF,MACVpF,MAAOF,GAEP,yBAAKC,UAAU,uBACb,yBACEA,UAAU,qBACV8F,QAASlG,KAAK2D,kBAEd,yBACEb,IAAI,sDACJC,IAAI,kBAIV,yBAAK3C,UAAU,2BACb,yBACEA,UAAU,yBACV8F,QAASlG,KAAKgE,sBAEd,yBACElB,IAAI,sDACJC,IAAI,qBAGR,yBACE3C,UAAU,uBACV8F,QAASlG,KAAK8D,oBAEd,yBACEhB,IAAI,sDACJC,IAAI,mBAGR,yBACE3C,UAAU,wBACV8F,QAASlG,KAAKiE,qBAEd,yBACEnB,IAAI,sDACJC,IAAI,qBAIV,yBAAK3C,UAAU,yBACb,yBACEA,UAAU,2BACV8F,QAASlG,KAAK6D,uBAEd,yBACEf,IAAI,wDACJC,IAAI,+B,GA5WAvC,aAkYPC,mBAVf,SAAyBC,GACvB,MAAO,CACLI,UAAWJ,EAAMI,UACjB0B,QAAS9B,EAAMa,KAAKyB,cACpB7C,OAAQO,EAAMC,MAAMwF,kBACpB5E,KAAMb,EAAMa,KAAKD,cAKNb,CAAyBiD,GEvYlC0C,E,kDACJ,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IAEDS,MAAQ,CACX0C,gBAAiB,OACjBlD,WAAY,SALG,E,qDAST,IACAC,EAAWH,KAAKC,MAAhBE,OACR,OACE,yBAAKC,UAAU,YAAYC,MAAOF,GAChC,kBAAC,EAAD,CACEiD,gBAAiBpD,KAAKU,MAAM0C,gBAC5BlD,WAAYF,KAAKU,MAAMR,aAEzB,kBAAC,EAAD,W,GAlBWM,aA6BJC,mBALf,SAAyBC,GACvB,MAAO,CACLP,OAAQO,EAAMC,MAAM0F,mBAGT5F,CAAyB2F,GC9BlCE,E,uKACM,IACAnG,EAAWH,KAAKC,MAAhBE,OACR,OACE,yBAAKC,UAAU,MAAMC,MAAOF,GAC1B,kBAAC,EAAD,W,GALUyF,IAAMpF,WAiBTC,mBANf,SAAyBC,GACvB,MAAO,CACLP,OAAQO,EAAMC,MAAM4F,cAIT9F,CAAyB6F,G,cCtBlCE,EAAe,CACnBpD,gBAAiB,OACjBlD,WAAY,a,gHCQHqB,GAAO,CAChBkF,SAAU,CACR/D,KAAM,WACND,MAAOiE,IACPnF,KAAM,IAAIoF,MAAMC,MAElBC,UAAW,CACTnE,KAAM,YACND,MAAOqE,KACPvF,KAAM,IAAIoF,MAAMI,OAElBC,cAAe,CACbtE,KAAM,gBACND,MAAOwE,IACP1F,KAAM,IAAIoF,MAAMO,OCvBdV,GAAe,CACnBxD,eAAe,EACf1B,WAAYC,GAAKkF,UCJZ,IAAMU,GAAa,CACxBZ,WAAY,CAAEa,gBAAiB,WAC/Bf,gBAAiB,CACfgB,gBAAiB,wDAEnBlB,kBAAmB,CACjBkB,gBAAiB,wDAEnB/G,KAAM,CACJA,KAAM,CACJ8G,gBAAiB,aAEnB7G,OAAQ,CACN8G,gBAAiB,uDACjBC,MAAO,WAKAC,GAAU,CACrBhB,WAAY,CAAEa,gBAAiB,WAC/Bf,gBAAiB,CACfgB,gBACE,+EAEJlB,kBAAmB,CACjBkB,gBACE,+EAEJ/G,KAAM,CACJA,KAAM,CACJ8G,gBAAiB,aAEnB7G,OAAQ,CACN8G,gBAAiB,uDACjBC,MAAO,WAKAE,GAAS,CACpBjB,WAAY,CAAEa,gBAAiB,WAC/Bf,gBAAiB,CACfgB,gBACE,0EAEJlB,kBAAmB,CACjBkB,gBAAiB,sDAEnB/G,KAAM,CACJA,KAAM,CACJ8G,gBAAiB,aAEnB7G,OAAQ,CACN8G,gBAAiB,uDACjBC,MAAO,WCrDPd,GAAe,CACnBD,WAAY,CAAEa,gBAAiB,WAC/Bf,gBAAiB,CACfgB,gBAAiB,wDAEnBlB,kBAAmB,CACjBkB,gBAAiB,wDAEnB/G,KAAM,CACJA,KAAM,CACJ8G,gBAAiB,aAEnB7G,OAAQ,CACN8G,gBAAiB,uDACjBC,MAAO,WCZEG,mBAAgB,CAC7B3G,ULCa,WAA0D,IAA/BJ,EAA8B,uDAAtB8F,EAAckB,EAAQ,uCACtE,OAAQA,EAAOpE,MAEb,INV4B,mBMY1B,MAAyB,SAArBoE,EAAO5G,UACF,2BACFJ,GADL,IAEE0C,gBAAiBsE,EAAO5G,UACxBZ,WAAY,cAGc,UAArBwH,EAAO5G,UACP,2BACFJ,GADL,IAEE0C,gBAAiBsE,EAAO5G,UACxBZ,WAAY,gBAGgB,YAArBwH,EAAO5G,UACT,2BACFJ,GADL,IAEE0C,gBAAiBsE,EAAO5G,UACxBZ,WAAY,WAIc,WAArBwH,EAAO5G,UACP,2BACFJ,GADL,IAEE0C,gBAAiBsE,EAAO5G,UACxBZ,WAAY,eAIc,cAArBwH,EAAO5G,UACP,2BACFJ,GADL,IAEE0C,gBAAiBsE,EAAO5G,UACxBZ,WAAY,aAKP,CACLQ,QACA0C,gBAAiBsE,EAAO5G,WAK9B,INzD8B,qBM0D5B,OAAO,2BACFJ,GADL,IAEER,WAAYwH,EAAOlE,OAIvB,QACE,OAAO9C,IK3DXa,KHEa,WAAsD,IAA/Bb,EAA8B,uDAAtB8F,GAAckB,EAAQ,uCAClE,OAAQA,EAAOpE,MAEb,IRRqB,YQSnB,OAAO,2BACF5C,GADL,IAEEsC,eAAe,IAInB,IRdsB,aQepB,OAAO,2BACFtC,GADL,IAEEsC,eAAe,IAInB,IRlBuB,cQmBrB,IAAI2E,EAAc,GAUlB,OAREA,EADkB,aAAhBD,EAAOnG,KACKA,GAAKkF,SACM,cAAhBiB,EAAOnG,KACFA,GAAKsF,UACM,kBAAhBa,EAAOnG,KACFA,GAAKyF,cAELzF,GAAKkF,SAEd,2BACF/F,GADL,IAEEsC,eAAe,EACf1B,WAAYqG,IAIhB,QACE,OAAOjH,IGrCXC,MDca,WAA0D,IAA/BD,EAA8B,uDAAtB8F,GAAckB,EAAQ,uCACtE,OAAQA,EAAOpE,MAEb,IVdwB,eUetB,MAAqB,YAAjBoE,EAAO/G,MACF4G,GACmB,WAAjBG,EAAO/G,MACT6G,GAEAL,GAIX,QACE,OAAOzG,M,UE7BPkH,GCDIC,YAAYC,IDGtBC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAMK,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.d6ca0394.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/she_move.632318e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/she_move.bcddd63b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/nikle_current.662cddd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nikle_currant.71ce7c17.mp3\";","module.exports = __webpack_public_path__ + \"static/media/qaafirana.a353567c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/qaafirana.499795a1.mp3\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\nimport '../assets/css/menu.css';\n\n// rendering different menu item to show in menu\n// marking active item to be active with red color background using activeItem received in props\nclass Menu extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">IPOD</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'Coverflow' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Coverflow\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Coverflow</li>\n            )}\n            {activeItem === 'Music' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Music\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Music</li>\n            )}\n            {activeItem === 'Games' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Games\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Games</li>\n            )}\n            {activeItem === 'Setting' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Setting\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Setting</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n  };\n}\nexport default connect(mapStateToProps)(Menu);\n","import React from 'react';\nimport '../assets/css/common.css';\nimport '../assets/css/games.css';\n\n// rendering games container with games image\nconst Games = () => {\n  return <div className=\"games-container screen-item-container\"></div>;\n};\n\nexport default Games;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\n\n// rendering setting component\n\nclass Setting extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">Setting</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'Themes' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Themes\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Themes</li>\n            )}\n            {activeItem === 'More Settings' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                More Settings\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">More Settings</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n    activeItem: state.component.activeItem,\n  };\n}\n\nexport default connect(mapStateToProps)(Setting);\n","import React from 'react';\nimport '../assets/css/common.css';\nimport '../assets/css/coverflow.css';\n\n// rendering coverflow container with coverflow image\nconst Coverflow = () => {\n  return <div className=\"coverflow-container screen-item-container\"></div>;\n};\nexport default Coverflow;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\nimport '../assets/css/menu.css';\n\n// rendering different music item to show in music\n// marking active item to be active with red color background using activeItem received in props\nclass Music extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">Music</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'Now Playing' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Now Playing\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Now Playing</li>\n            )}\n            {activeItem === 'All Music' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                All Music\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">All Music</li>\n            )}\n            {activeItem === 'Artist' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Artist\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Artist</li>\n            )}\n            {activeItem === 'Album' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Album\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Album</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n  };\n}\n\nexport default connect(mapStateToProps)(Music);\n","import React from 'react';\nimport '../assets/css/common.css';\nimport '../assets/css/artist.css';\n\n// renders artist container which shows artist image\nconst Artist = () => {\n  return <div className=\"artist-container screen-item-container\"></div>;\n};\n\nexport default Artist;\n","import React from 'react';\nimport '../assets/css/album.css';\nimport '../assets/css/common.css';\n\n//renders album container showing album image\nconst Album = () => {\n  return <div className=\"album-container screen-item-container\"></div>;\n};\n\nexport default Album;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\nimport '../assets/css/menu.css';\n\n//rendering all music list component\nclass AllMusic extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">Songs</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'She Move' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                She Move\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">She Move</li>\n            )}\n            {activeItem === 'Qaafirana' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Qaafirana\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Qaafirana</li>\n            )}\n            {activeItem === 'Nikle Current' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Nikle Currant\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Nikle Currant</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n    activeItem: state.component.activeItem,\n  };\n}\n\nexport default connect(mapStateToProps)(AllMusic);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\nimport '../assets/css/playing.css';\n\nclass Playing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSongDuration: 0,\n      songDurationInterval: '',\n      width: {\n        width: 0 + '%',\n      },\n    };\n  }\n\n  // setting up the current time of the song\n  // calling one function to set the interval of 1 second to updating the current song time of song in state\n  componentDidMount() {\n    const { song } = this.props.activeSong;\n    this.setState({ currentSongDuration: song.currentTime });\n    this.songDurationInterval = setInterval(() => {\n      const { song } = this.props.activeSong;\n      let time = song.currentTime;\n      // calculating width for progress bar\n      let width = (time / song.duration) * 100 + '%';\n      let minute = Math.floor(time / 60);\n      let second = Math.floor(time % 60);\n      if (minute < 10) {\n        minute = '0' + minute;\n      }\n      if (second < 10) {\n        second = '0' + second;\n      }\n      let currentTime = minute + ':' + second;\n      this.setState({ currentTime: currentTime, width: { width: width } });\n    }, 100);\n  }\n\n  // clearing the songDurationInterval which is managing currentSongTime\n  componentWillUnmount() {\n    clearInterval(this.songDurationInterval);\n  }\n\n  // according to status received from store as the status is changed by pause play button we are pausing and playing song\n  componentDidUpdate() {\n    const { playing } = this.props;\n    if (playing) {\n      this.playSong();\n    } else {\n      this.pauseSong();\n    }\n  }\n\n  // function to dispatch a method to play song\n  playSong = () => {\n    const { song } = this.props.activeSong;\n    song.play();\n  };\n\n  // function to display message to pause song\n  pauseSong = () => {\n    const { song } = this.props.activeSong;\n    song.pause();\n  };\n\n  // function to render music component\n  render() {\n    // setting up current duration and total song duration to show on screen\n    const { playing } = this.props;\n    const { song, image, name } = this.props.activeSong;\n    let totalSongDurationMinute = Math.floor(song.duration / 60);\n    let totalSongDurationSecond = Math.floor(song.duration % 60);\n    if (totalSongDurationMinute < 10) {\n      totalSongDurationMinute = '0' + totalSongDurationMinute;\n    }\n    if (totalSongDurationSecond < 10) {\n      totalSongDurationSecond = '0' + totalSongDurationSecond;\n    }\n    let totalSongDuration =\n      totalSongDurationMinute + ':' + totalSongDurationSecond;\n    let currentSongDuration = this.state.currentTime;\n    return (\n      <div className=\"playing-container screen-item-container\">\n        <div className=\"playing-heading\">Music</div>\n        <div className=\"playing-song-image\">\n          <img src={image} alt=\"song-album\"></img>\n        </div>\n        <div className=\"song-name\">{name}</div>\n        <div className=\"playing-button\">\n          {playing ? (\n            <img\n              src=\"https://image.flaticon.com/icons/svg/2611/2611514.svg\"\n              alt=\"pause-button\"\n            ></img>\n          ) : (\n            <img\n              src=\"https://image.flaticon.com/icons/svg/2404/2404547.svg\"\n              alt=\"play-button\"\n            ></img>\n          )}\n        </div>\n        <div className=\"playing-time\">\n          {currentSongDuration}/{totalSongDuration}\n        </div>\n        <div className=\"progress-bar\" style={this.state.width}></div>\n      </div>\n    );\n  }\n}\n\n// sending song and playing status from store to props\nfunction mapStateToProps(state) {\n  return {\n    playing: state.song.isSongPlaying,\n    activeSong: state.song.activeSong,\n  };\n}\n\n// connecting store props to playing component\nexport default connect(mapStateToProps)(Playing);\n","import React from 'react';\nimport '../assets/css/common.css';\nimport '../assets/css/more_settings.css';\n\n//rendering more settings container\nconst MoreSettings = () => {\n  return <div className=\"more-settings-container screen-item-container\"></div>;\n};\n\nexport default MoreSettings;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\n\n// rendering themes component having different option for themes\nclass Themes extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">Setting</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'Marshmello' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Marshmello\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Marshmello</li>\n            )}\n            {activeItem === 'Striker' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Striker\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Striker</li>\n            )}\n            {activeItem === 'Virtue' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Virtue\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Virtue</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n    activeItem: state.component.activeItem,\n  };\n}\n\nexport default connect(mapStateToProps)(Themes);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Menu from './Menu';\nimport Games from './Games';\nimport Setting from './Setting';\nimport Coverflow from './Coverflow';\nimport Music from './Music';\nimport Artist from './Artist';\nimport Album from './Album';\nimport AllMusic from './AllMusic';\nimport Playing from './Playing';\nimport MoreSettings from './MoreSettings';\nimport Themes from './Themes';\nimport '../assets/css/screen.css';\n\n// render screen of IPOD\n// depend on different active component in received from props these will set the component on screen\nclass Screen extends Component {\n  render() {\n    const { activeComponent, activeItem } = this.props;\n    return (\n      <div className=\"screen-container\">\n        {activeComponent === 'Coverflow' && <Coverflow />}\n        {activeComponent === 'Menu' && <Menu activeItem={activeItem} />}\n        {activeComponent === 'Music' && <Music activeItem={activeItem} />}\n        {activeComponent === 'Games' && <Games />}\n        {activeComponent === 'Setting' && <Setting />}\n        {activeComponent === 'Artist' && <Artist />}\n        {activeComponent === 'Album' && <Album />}\n        {activeComponent === 'All Music' && <AllMusic />}\n        {activeComponent === 'More Settings' && <MoreSettings />}\n        {activeComponent === 'Themes' && <Themes />}\n        {activeComponent === 'Now Playing' && <Playing />}\n      </div>\n    );\n  }\n}\n\n// mapping activeComponent and activeItem from store to the props of screen\nfunction mapStateToProps(state) {\n  return {\n    activeComponent: state.component.activeComponent,\n    activeItem: state.component.activeItem,\n  };\n}\n\n// connecting props from store to screen\nexport default connect(mapStateToProps)(Screen);\n","import { CHANGE_COMPONENT, CHANGE_ACTIVE_ITEM } from './actionTypes';\n\n//action creator for changing component to the current component passed\nexport function changeComponent(component) {\n  return {\n    type: CHANGE_COMPONENT,\n    component,\n  };\n}\n\n//action creator for changing active item to the current item passed\nexport function changeActiveItem(item) {\n  return {\n    type: CHANGE_ACTIVE_ITEM,\n    item,\n  };\n}\n","//action types to change component and active item of the component\nexport const CHANGE_COMPONENT = 'CHANGE_COMPONENT';\nexport const CHANGE_ACTIVE_ITEM = 'CHANGE_ACTIVE_ITEM';\n\n//to pause and play song\nexport const PLAY_SONG = 'PLAY_SONG';\nexport const PAUSE_SONG = 'PAUSE_SONG';\n\n//to change song\nexport const CHANGE_SONG = 'CHANGE_SONG';\n\n//to change theme\nexport const CHANGE_THEME = 'CHANGE_THEME';\n","import { PLAY_SONG, PAUSE_SONG, CHANGE_SONG } from './actionTypes';\n\n//action creator for playing song\nexport function playSong() {\n  return {\n    type: PLAY_SONG,\n  };\n}\n\n// action creator for pausing song\nexport function pauseSong() {\n  return {\n    type: PAUSE_SONG,\n  };\n}\n\n//to change the active song\nexport function changeSong(song) {\n  return {\n    type: CHANGE_SONG,\n    song,\n  };\n}\n","import React, { Component } from 'react';\nimport ZingTouch from 'zingtouch';\nimport '../assets/css/buttons.css';\nimport { connect } from 'react-redux';\n\n// importing action creators to perform different actions\nimport { changeComponent } from '../actions/component';\nimport { changeActiveItem } from '../actions/component';\nimport { playSong, pauseSong, changeSong } from '../actions/song';\n\n// importing action creator to change theme\nimport { changeTheme } from '../actions/theme';\n\n// renders button component to show all buttons\nclass Buttons extends Component {\n  constructor(props) {\n    super(props);\n    // defined is used to maintain that region is already defined once and will not be defined again\n    this.defined = false;\n    // reference to the container of jsx from where to create region for gesture\n    this.zingRegion = React.createRef();\n    this.region = null;\n    // reference to inner container that wil be binded to gesture region\n    this.inner = React.createRef();\n  }\n\n  //creating region to work gesture in that region on component mounting\n  componentDidMount() {\n    this.region = new ZingTouch.Region(this.zingRegion.current);\n  }\n\n  // channing defined to false when component is unmounted\n  componentWillUnmount() {\n    this.defined = false;\n  }\n\n  // on clicking menu button changing active component on screen to menu\n  handleMenuButton = () => {\n    this.props.dispatch(changeComponent('Menu'));\n  };\n\n  // if active component is music then pausing and playing song on clicking pause play button\n  handlePausePlayButton = () => {\n    const { playing, dispatch } = this.props;\n    const { activeComponent } = this.props.component;\n    if (activeComponent !== 'Now Playing') {\n      return;\n    }\n    if (playing === true) {\n      dispatch(pauseSong());\n    } else {\n      dispatch(playSong());\n    }\n  };\n\n  handleCenterButton = () => {\n    const { dispatch, playing } = this.props;\n    const { activeComponent, activeItem } = this.props.component;\n    // if active component is playing then center button will also pause and play song like pause play button\n    if (activeComponent === 'Now Playing') {\n      if (playing === true) {\n        dispatch(pauseSong());\n      } else {\n        dispatch(playSong());\n      }\n      return;\n    } else if (\n      activeComponent === 'Menu' ||\n      activeComponent === 'Music' ||\n      activeComponent === 'Setting'\n    ) {\n      dispatch(changeComponent(activeItem));\n    } else if (activeComponent === 'Themes') {\n      dispatch(changeTheme(activeItem));\n    } else if (activeComponent === 'All Music') {\n      dispatch(changeSong(activeItem));\n      const { song } = this.props.song;\n      song.load();\n      dispatch(changeComponent('Now Playing'));\n    }\n  };\n\n  // change song in forward direction when playing component is active\n  handleBackwardButton = () => {\n    const { dispatch } = this.props;\n    const { activeComponent } = this.props.component;\n    const { song } = this.props.song;\n    if (activeComponent === 'Now Playing') {\n      song.load();\n      const { name } = this.props.song;\n      if (name === 'She Move') {\n        dispatch(changeSong('Nikle Current'));\n      } else if (name === 'Qaafirana') {\n        dispatch(changeSong('She Move'));\n      } else if (name === 'Nikle Currant') {\n        dispatch(changeSong('Qaafirana'));\n      }\n    }\n  };\n\n  // change song in backward direction when playing component is active\n  handleForwardButton = () => {\n    const { dispatch } = this.props;\n    const { activeComponent } = this.props.component;\n    const { song } = this.props.song;\n    if (activeComponent === 'Now Playing') {\n      song.load();\n      const { name } = this.props.song;\n      if (name === 'She Move') {\n        dispatch(changeSong('Qaafirana'));\n      } else if (name === 'Qaafirana') {\n        dispatch(changeSong('Nikle Current'));\n      } else if (name === 'Nikle Currant') {\n        dispatch(changeSong('She Move'));\n      }\n    }\n  };\n\n  //changing active item of menu component in forward direction\n  forwardMoveMenuComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Coverflow') {\n      dispatch(changeActiveItem('Music'));\n    } else if (activeItem === 'Music') {\n      dispatch(changeActiveItem('Games'));\n    } else if (activeItem === 'Games') {\n      dispatch(changeActiveItem('Setting'));\n    } else if (activeItem === 'Setting') {\n      dispatch(changeActiveItem('Coverflow'));\n    }\n  };\n\n  //changing active item of menu component in backward direction\n  backwardMoveMenuComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Coverflow') {\n      dispatch(changeActiveItem('Setting'));\n    } else if (activeItem === 'Music') {\n      dispatch(changeActiveItem('Coverflow'));\n    } else if (activeItem === 'Games') {\n      dispatch(changeActiveItem('Music'));\n    } else if (activeItem === 'Setting') {\n      dispatch(changeActiveItem('Games'));\n    }\n  };\n\n  //changing active item of music component in forward direction\n  forwardMoveMusicComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Now Playing') {\n      dispatch(changeActiveItem('All Music'));\n    } else if (activeItem === 'All Music') {\n      dispatch(changeActiveItem('Artist'));\n    } else if (activeItem === 'Artist') {\n      dispatch(changeActiveItem('Album'));\n    } else if (activeItem === 'Album') {\n      dispatch(changeActiveItem('Now Playing'));\n    }\n  };\n\n  // changing active item of music component in backward direction\n  backwardMoveMusicComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Now Playing') {\n      dispatch(changeActiveItem('Album'));\n    } else if (activeItem === 'All Music') {\n      dispatch(changeActiveItem('Now Playing'));\n    } else if (activeItem === 'Artist') {\n      dispatch(changeActiveItem('All Music'));\n    } else if (activeItem === 'Album') {\n      dispatch(changeActiveItem('Artist'));\n    }\n  };\n\n  // changing active item of setting component in forward direction\n  forwardMoveSettingComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Themes') {\n      dispatch(changeActiveItem('More Settings'));\n    } else if (activeItem === 'More Settings') {\n      dispatch(changeActiveItem('Themes'));\n    }\n  };\n\n  // changing active item of setting component in backward direction\n  backwardMoveSettingComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Themes') {\n      dispatch(changeActiveItem('More Settings'));\n    } else if (activeItem === 'More Settings') {\n      dispatch(changeActiveItem('Themes'));\n    }\n  };\n\n  //changing active item of themes component in forward direction\n  forwardMoveThemesComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Marshmello') {\n      dispatch(changeActiveItem('Striker'));\n    } else if (activeItem === 'Striker') {\n      dispatch(changeActiveItem('Virtue'));\n    } else if (activeItem === 'Virtue') {\n      dispatch(changeActiveItem('Marshmello'));\n    }\n  };\n\n  // changing activce item of themes component in backward direction\n  backwardMoveThemesComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Marshmello') {\n      dispatch(changeActiveItem('Virtue'));\n    } else if (activeItem === 'Striker') {\n      dispatch(changeActiveItem('Marshmello'));\n    } else if (activeItem === 'Virtue') {\n      dispatch(changeActiveItem('Striker'));\n    }\n  };\n\n  //changing active item of all music component in forward direction\n  forwardMoveAllMusicComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'She Move') {\n      dispatch(changeActiveItem('Qaafirana'));\n    } else if (activeItem === 'Qaafirana') {\n      dispatch(changeActiveItem('Nikle Current'));\n    } else if (activeItem === 'Nikle Current') {\n      dispatch(changeActiveItem('She Move'));\n    }\n  };\n\n  //changing active item of all music component in forward direction\n  backwardMoveAllMusicComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'She Move') {\n      dispatch(changeActiveItem('Nikle Current'));\n    } else if (activeItem === 'Qaafirana') {\n      dispatch(changeActiveItem('She Move'));\n    } else if (activeItem === 'Nikle Current') {\n      dispatch(changeActiveItem('Qaafirana'));\n    }\n  };\n\n  // rotating item on the basis of angle travelled\n  // function to rotate item\n  rotate = (target) => {\n    let angleChange = 0;\n    let distance = 0;\n    // keeping old this so that we can call backward and forward move function of class\n    let oldThis = this;\n    // binding rotatable region to rotate of zingtouch library\n    // this value changes inside region.bind as it a callback\n    this.region.bind(target, 'rotate', function (event) {\n      let currentDistance = event.detail.distanceFromLast;\n      if (distance === 0) {\n        distance = currentDistance;\n      } else {\n        if (currentDistance > 0 && distance < 0) {\n          angleChange = 0;\n          distance = 0;\n        } else if (currentDistance < 0 && distance > 0) {\n          angleChange = 0;\n          distance = 0;\n        }\n      }\n      angleChange++;\n      // if anglechange is 15 then rotate the item towards forward if angle is greater then zero\n      // if anglechange is 15 then rotate the item towards backward if angle is less then zero\n      if (angleChange === 15) {\n        angleChange = 0;\n        const { activeComponent } = oldThis.props.component;\n        if (distance < 0) {\n          // calling movement fuction of active item with old this on the basis of current component to move selected active item\n          //changing active item item according to active Component\n          if (activeComponent === 'Menu') {\n            oldThis.backwardMoveMenuComponent();\n          } else if (activeComponent === 'Music') {\n            oldThis.backwardMoveMusicComponent();\n          } else if (activeComponent === 'Setting') {\n            oldThis.backwardMoveSettingComponent();\n          } else if (activeComponent === 'Themes') {\n            oldThis.backwardMoveThemesComponent();\n          } else if (activeComponent === 'All Music') {\n            oldThis.backwardMoveAllMusicComponent();\n          }\n        } else {\n          if (activeComponent === 'Menu') {\n            oldThis.forwardMoveMenuComponent();\n          } else if (activeComponent === 'Music') {\n            oldThis.forwardMoveMusicComponent();\n          } else if (activeComponent === 'Setting') {\n            oldThis.forwardMoveSettingComponent();\n          } else if (activeComponent === 'Themes') {\n            oldThis.forwardMoveThemesComponent();\n          } else if (activeComponent === 'All Music') {\n            oldThis.forwardMoveAllMusicComponent();\n          }\n        }\n      }\n    });\n  };\n\n  // using these function to create zing region on mouse over once if not created and if created then it will not be called\n  rotateUsingZing = () => {\n    if (this.defined === false) {\n      this.defined = true;\n      this.rotate(this.inner.current);\n    }\n  };\n\n  // rendering button component\n  render() {\n    const { styles } = this.props;\n    return (\n      <div className=\"button-container\">\n        <div className=\"button-region-container\" ref={this.zingRegion}>\n          <div\n            className=\"inner-button-container\"\n            onMouseOver={this.rotateUsingZing}\n            ref={this.inner}\n            style={styles}\n          >\n            <div className=\"up-button-container\">\n              <div\n                className=\"button menu-button\"\n                onClick={this.handleMenuButton}\n              >\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/833/833473.svg\"\n                  alt=\"menu-button\"\n                ></img>\n              </div>\n            </div>\n            <div className=\"center-button-container\">\n              <div\n                className=\"button backward-button\"\n                onClick={this.handleBackwardButton}\n              >\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/915/915516.svg\"\n                  alt=\"backward-button\"\n                ></img>\n              </div>\n              <div\n                className=\"button center-button\"\n                onClick={this.handleCenterButton}\n              >\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/323/323308.svg\"\n                  alt=\"center-button\"\n                ></img>\n              </div>\n              <div\n                className=\"button forward-button\"\n                onClick={this.handleForwardButton}\n              >\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/915/915517.svg\"\n                  alt=\"forward-button\"\n                ></img>\n              </div>\n            </div>\n            <div className=\"down-button-container\">\n              <div\n                className=\"button pause-play-button\"\n                onClick={this.handlePausePlayButton}\n              >\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/1792/1792886.svg\"\n                  alt=\"pause-play-button\"\n                ></img>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// using store to map required props to above component\nfunction mapStateToProps(state) {\n  return {\n    component: state.component,\n    playing: state.song.isSongPlaying,\n    styles: state.theme.circle_background,\n    song: state.song.activeSong,\n  };\n}\n\n// connecting required props using connect to buttons\nexport default connect(mapStateToProps)(Buttons);\n","import { CHANGE_THEME } from './actionTypes';\n\n//action creator for theme\nexport function changeTheme(theme) {\n  return {\n    type: CHANGE_THEME,\n    theme,\n  };\n}\n","import React, { Component } from 'react';\nimport '../assets/css/ipod.css';\nimport Screen from './Screen';\nimport Buttons from './Buttons';\nimport { connect } from 'react-redux';\n\n// renders the main ipod component in two parts\n// first part is screen of IPOD which show different component\n// second part is button component which perform actions on screen\nclass Ipod extends Component {\n  constructor(props) {\n    super(props);\n    //using state to maintain active component and  active item in menu or music list\n    this.state = {\n      activeComponent: 'Menu',\n      activeItem: 'Music',\n    };\n  }\n\n  render() {\n    const { styles } = this.props;\n    return (\n      <div className=\"container\" style={styles}>\n        <Screen\n          activeComponent={this.state.activeComponent}\n          activeItem={this.state.activeItem}\n        />\n        <Buttons />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.ipod_background,\n  };\n}\nexport default connect(mapStateToProps)(Ipod);\n","import React from 'react';\nimport '../assets/css/app.css';\nimport Ipod from './Ipod';\nimport { connect } from 'react-redux';\n\n//this compoonent is just the outer container component of IPOD so set the main background\n// this component renders the main IPOD to the display\n\nclass App extends React.Component {\n  render() {\n    const { styles } = this.props;\n    return (\n      <div className=\"app\" style={styles}>\n        <Ipod />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.background,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { CHANGE_COMPONENT, CHANGE_ACTIVE_ITEM } from '../actions/actionTypes';\n\n// component reducer initial state to render menu component on loading IPOD\nconst initialState = {\n  activeComponent: 'Menu',\n  activeItem: 'Coverflow',\n};\n\nexport default function changingComponent(state = initialState, action) {\n  switch (action.type) {\n    // case to change the component on the basis of component received in props\n    case CHANGE_COMPONENT: {\n      // if we are changing active component to menu then we need to change active item to coverflow\n      if (action.component === 'Menu') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'Coverflow',\n        };\n      } // if we are changing active component to music then we need to change active item to All Music\n      else if (action.component === 'Music') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'Now Playing',\n        };\n        // if we are changing active component to setting then we need to change active item to themes\n      } else if (action.component === 'Setting') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'Themes',\n        };\n      }\n      //if we are changing active component to setting then we need to change active item to marshmello\n      else if (action.component === 'Themes') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'Marshmello',\n        };\n      }\n      //if we are changing active component to all music then we need to set active item to She Move\n      else if (action.component === 'All Music') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'She Move',\n        };\n      }\n      // changing to other component\n      else {\n        return {\n          state,\n          activeComponent: action.component,\n        };\n      }\n    }\n    // case to change active item of menu or music component\n    case CHANGE_ACTIVE_ITEM: {\n      return {\n        ...state,\n        activeItem: action.item,\n      };\n    }\n    // default case to render menu component when IPOD is loaded initially\n    default: {\n      return state;\n    }\n  }\n}\n","//importing she move song details\nimport she_move_img from '../assets/images/she_move.jpg';\nimport she_move_song from '../assets/songs/she_move.mp3';\n\n// importing nikle current song details\nimport nikle_current_img from '../assets/images/nikle_current.jpg';\nimport nikle_currant_song from '../assets/songs/nikle_currant.mp3';\n\n// importing qaafirana song details\nimport qaafirana_img from '../assets/images/qaafirana.jpg';\nimport qaafirana_song from '../assets/songs/qaafirana.mp3';\n\n// creating song data object\nexport let song = {\n  she_move: {\n    name: 'She Move',\n    image: she_move_img,\n    song: new Audio(she_move_song),\n  },\n  qaafirana: {\n    name: 'Qaafirana',\n    image: qaafirana_img,\n    song: new Audio(qaafirana_song),\n  },\n  nikle_currant: {\n    name: 'Nikle Currant',\n    image: nikle_current_img,\n    song: new Audio(nikle_currant_song),\n  },\n};\n","import { PLAY_SONG, PAUSE_SONG, CHANGE_SONG } from '../actions/actionTypes';\nimport { song } from '../data/song';\n\n// song reducer intial state to maintain song status\nconst initialState = {\n  isSongPlaying: false,\n  activeSong: song.she_move,\n};\n\n// changing store on the basis of different actions\nexport default function pausePlaySong(state = initialState, action) {\n  switch (action.type) {\n    // case to change song playing status to play\n    case PLAY_SONG: {\n      return {\n        ...state,\n        isSongPlaying: true,\n      };\n    }\n    // case to change song playing status to pause\n    case PAUSE_SONG: {\n      return {\n        ...state,\n        isSongPlaying: false,\n      };\n    }\n    // changing song on the basis of the song name we received in action\n    case CHANGE_SONG: {\n      let currentSong = '';\n      if (action.song === 'She Move') {\n        currentSong = song.she_move;\n      } else if (action.song === 'Qaafirana') {\n        currentSong = song.qaafirana;\n      } else if (action.song === 'Nikle Current') {\n        currentSong = song.nikle_currant;\n      } else {\n        currentSong = song.she_move;\n      }\n      return {\n        ...state,\n        isSongPlaying: true,\n        activeSong: currentSong,\n      };\n    }\n    // returning default pause status of song\n    default: {\n      return state;\n    }\n  }\n}\n","// exporting different themes used as theme for ipod\n\nexport const marshmello = {\n  background: { backgroundColor: '#f5c8cf' },\n  ipod_background: {\n    backgroundImage: 'linear-gradient(to right, #396570, #1c7187, #184b58)',\n  },\n  circle_background: {\n    backgroundImage: 'linear-gradient(to right, #e5b17a, #c66d18, #f3be8c)',\n  },\n  menu: {\n    menu: {\n      backgroundColor: '#fcffe3a1',\n    },\n    active: {\n      backgroundImage: 'linear-gradient(to right, #cd2f0b, #b22100, #992409)',\n      color: 'white',\n    },\n  },\n};\n\nexport const striker = {\n  background: { backgroundColor: '#5cdc98' },\n  ipod_background: {\n    backgroundImage:\n      'linear-gradient(to right, rgb(234 45 159), rgb(138 51 103), rgb(130 23 87))',\n  },\n  circle_background: {\n    backgroundImage:\n      'linear-gradient(to right, rgb(213 166 11), rgb(232 178 0), rgb(183 185 61))',\n  },\n  menu: {\n    menu: {\n      backgroundColor: '#00f4ffc4',\n    },\n    active: {\n      backgroundImage: 'linear-gradient(to right, #120868, #3F51B5, #673AB7)',\n      color: 'white',\n    },\n  },\n};\n\nexport const virtue = {\n  background: { backgroundColor: '#c9af98' },\n  ipod_background: {\n    backgroundImage:\n      'linear-gradient(to right, rgb(8 26 63), rgb(21 51 117), rgb(34 40 51))',\n  },\n  circle_background: {\n    backgroundImage: 'linear-gradient(to right, white, #f64e4e, #f03f3f)',\n  },\n  menu: {\n    menu: {\n      backgroundColor: '#ffb4b4bf',\n    },\n    active: {\n      backgroundImage: 'linear-gradient(to right, #d14172, #981542, #940a39)',\n      color: 'white',\n    },\n  },\n};\n","import { CHANGE_THEME } from '../actions/actionTypes';\nimport { marshmello, virtue, striker } from '../data/themes';\n\n// component reducer initial state to render menu component on loading IPOD\nconst initialState = {\n  background: { backgroundColor: '#f5c8cf' },\n  ipod_background: {\n    backgroundImage: 'linear-gradient(to right, #396570, #1c7187, #184b58)',\n  },\n  circle_background: {\n    backgroundImage: 'linear-gradient(to right, #e5b17a, #c66d18, #f3be8c)',\n  },\n  menu: {\n    menu: {\n      backgroundColor: '#fcffe3a1',\n    },\n    active: {\n      backgroundImage: 'linear-gradient(to right, #cd2f0b, #b22100, #992409)',\n      color: 'white',\n    },\n  },\n};\n\nexport default function changingComponent(state = initialState, action) {\n  switch (action.type) {\n    // case to change the theme on the basis of theme received in action\n    case CHANGE_THEME: {\n      if (action.theme === 'Striker') {\n        return striker;\n      } else if (action.theme === 'Virtue') {\n        return virtue;\n      } else {\n        return marshmello;\n      }\n    }\n    // default case to render marshmello theme when IPOD is loaded initially\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport component from './component';\nimport song from './song';\nimport theme from './theme';\n\n// setting both the reducer in as single reducer in store\nexport default combineReducers({\n  component,\n  song,\n  theme,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { configureStore } from './store';\nimport { Provider } from 'react-redux';\nimport './assets/css/index.css';\n\n//configuring new store\nconst store = configureStore();\n// passing store to app using provider\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nlet store;\n\n// creating store to maintain status using combine reducer\nexport function configureStore() {\n  store = createStore(reducer);\n  return store;\n}\n"],"sourceRoot":""}