{"version":3,"sources":["assets/images/she_move.jpg","assets/songs/she_move.mp3","components/Menu.js","components/Games.js","components/Setting.js","components/Coverflow.js","components/Music.js","components/Artist.js","components/Album.js","components/Playing.js","components/MoreSettings.js","components/Themes.js","components/Screen.js","actions/component.js","actions/actionTypes.js","components/Buttons.js","actions/song.js","actions/theme.js","components/Ipod.js","components/App.js","reducers/component.js","reducers/song.js","data/themes.js","reducers/theme.js","reducers/index.js","index.js","store/index.js"],"names":["module","exports","Menu","this","props","activeItem","styles","className","style","menu","active","Component","connect","state","theme","Games","Setting","component","Coverflow","Music","Artist","Album","Playing","playSong","song","play","pauseSong","pause","currentSongDuration","songDurationInterval","setState","currentTime","setInterval","clearInterval","playing","totalSongDuration","Math","floor","duration","src","songImage","alt","isSongPlaying","MoreSettings","Themes","Screen","activeComponent","changeComponent","type","changeActiveItem","item","Buttons","handleMenuButton","dispatch","handlePausePlayButton","handleCenterButton","forwardMoveMenuComponent","backwardMoveMenuComponent","forwardMoveMusicComponent","backwardMoveMusicComponent","forwardMoveSettingComponent","backwardMoveSettingComponent","forwardMoveThemesComponent","backwardMoveThemesComponent","rotate","target","angleChange","distance","oldThis","region","bind","event","currentDistance","detail","distanceFromLast","rotateUsingZing","defined","inner","current","zingRegion","React","createRef","ZingTouch","Region","ref","onMouseOver","onClick","circle_background","Ipod","ipod_background","App","background","initialState","Audio","marshmello","backgroundColor","backgroundImage","color","striker","virtue","combineReducers","action","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f546aa7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/she_move.632318e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/she_move.8f30e924.mp3\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\nimport '../assets/css/menu.css';\n\n// rendering different menu item to show in menu\n// marking active item to be active with red color background using activeItem received in props\nclass Menu extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">IPOD</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'Coverflow' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Coverflow\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Coverflow</li>\n            )}\n            {activeItem === 'Music' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Music\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Music</li>\n            )}\n            {activeItem === 'Games' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Games\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Games</li>\n            )}\n            {activeItem === 'Setting' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Setting\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Setting</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n  };\n}\nexport default connect(mapStateToProps)(Menu);\n","import React from 'react';\nimport '../assets/css/common.css';\nimport '../assets/css/games.css';\n\n// rendering games container with games image\nconst Games = () => {\n  return <div className=\"games-container screen-item-container\"></div>;\n};\n\nexport default Games;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\n\n// rendering setting component\n\nclass Setting extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">Setting</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'Themes' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Themes\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Themes</li>\n            )}\n            {activeItem === 'More Settings' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                More Settings\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">More Settings</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n    activeItem: state.component.activeItem,\n  };\n}\n\nexport default connect(mapStateToProps)(Setting);\n","import React from 'react';\nimport '../assets/css/common.css';\nimport '../assets/css/coverflow.css';\n\n// rendering coverflow container with coverflow image\nconst Coverflow = () => {\n  return <div className=\"coverflow-container screen-item-container\"></div>;\n};\nexport default Coverflow;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\nimport '../assets/css/menu.css';\n\n// rendering different music item to show in music\n// marking active item to be active with red color background using activeItem received in props\nclass Music extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">Music</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'All Music' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                All Music\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">All Music</li>\n            )}\n            {activeItem === 'Artist' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Artist\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Artist</li>\n            )}\n            {activeItem === 'Album' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Album\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Album</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n  };\n}\n\nexport default connect(mapStateToProps)(Music);\n","import React from 'react';\nimport '../assets/css/common.css';\nimport '../assets/css/artist.css';\n\n// renders artist container which shows artist image\nconst Artist = () => {\n  return <div className=\"artist-container screen-item-container\"></div>;\n};\n\nexport default Artist;\n","import React from 'react';\nimport '../assets/css/album.css';\nimport '../assets/css/common.css';\n\n//renders album container showing album image\nconst Album = () => {\n  return <div className=\"album-container screen-item-container\"></div>;\n};\n\nexport default Album;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// importing song image\nimport songImage from '../assets/images/she_move.jpg';\nimport '../assets/css/common.css';\nimport '../assets/css/playing.css';\nclass Playing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSongDuration: 0,\n      songDurationInterval: '',\n    };\n  }\n\n  // setting up the current time of the song\n  // calling one function to set the interval of 1 second to updating the current song time of song in state\n  componentDidMount() {\n    const { song } = this.props;\n    this.setState({ currentSongDuration: song.currentTime });\n    this.songDurationInterval = setInterval(() => {\n      this.setState({ currentTime: this.props.song.currentTime });\n    }, 100);\n  }\n\n  // clearing the songDurationInterval which is managing currentSongTime\n  componentWillUnmount() {\n    clearInterval(this.songDurationInterval);\n  }\n\n  // according to status received from store as the status is changed by pause play button we are pausing and playing song\n  componentDidUpdate() {\n    const { playing } = this.props;\n    if (playing) {\n      this.playSong();\n    } else {\n      this.pauseSong();\n    }\n  }\n\n  // function to dispatch a method to play song\n  playSong = () => {\n    const { song } = this.props;\n    song.play();\n  };\n\n  // function to display message to pause song\n  pauseSong = () => {\n    const { song } = this.props;\n    song.pause();\n  };\n\n  // function to render music component\n  render() {\n    // setting up current duration and total song duration to show on screen\n    const { playing } = this.props;\n    let totalSongDuration =\n      Math.floor(this.props.song.duration / 60) +\n      ':' +\n      Math.floor(this.props.song.duration % 60);\n    let currentSongDuration =\n      Math.floor(this.state.currentTime / 60) +\n      ':' +\n      Math.floor(this.state.currentTime % 60);\n    if (totalSongDuration === 'NaN:NaN') {\n      totalSongDuration = '0:0';\n    }\n    return (\n      <div className=\"playing-container screen-item-container\">\n        <div className=\"playing-heading\">Music</div>\n        <div className=\"playing-song-image\">\n          <img src={songImage} alt=\"song-album\"></img>\n        </div>\n        <div className=\"song-name\">She Move Like It</div>\n        <div className=\"playing-button\">\n          {playing ? (\n            <img\n              src=\"https://image.flaticon.com/icons/svg/2611/2611514.svg\"\n              alt=\"pause-button\"\n            ></img>\n          ) : (\n            <img\n              src=\"https://image.flaticon.com/icons/svg/2404/2404547.svg\"\n              alt=\"play-button\"\n            ></img>\n          )}\n        </div>\n        <div className=\"playing-time\">\n          {currentSongDuration}/{totalSongDuration}\n        </div>\n      </div>\n    );\n  }\n}\n\n// sending song and playing status from store to props\nfunction mapStateToProps(state) {\n  return {\n    playing: state.song.isSongPlaying,\n    song: state.song.song,\n  };\n}\n\n// connecting store props to playing component\nexport default connect(mapStateToProps)(Playing);\n","import React from 'react';\nimport '../assets/css/common.css';\nimport '../assets/css/more_settings.css';\n\n//rendering more settings container\nconst MoreSettings = () => {\n  return <div className=\"more-settings-container screen-item-container\"></div>;\n};\n\nexport default MoreSettings;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/common.css';\n\nclass Themes extends Component {\n  render() {\n    const { activeItem, styles } = this.props;\n    return (\n      <div className=\"menu-container screen-item-container\">\n        <div className=\"menu\" style={styles.menu}>\n          <div className=\"menu-heading\">Setting</div>\n          <ul className=\"menu-list-container\">\n            {activeItem === 'Marshmello' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Marshmello\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Marshmello</li>\n            )}\n            {activeItem === 'Striker' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Striker\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Striker</li>\n            )}\n            {activeItem === 'Virtue' ? (\n              <li className=\"menu-list-item active\" style={styles.active}>\n                Virtue\n              </li>\n            ) : (\n              <li className=\"menu-list-item\">Virtue</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.menu,\n    activeItem: state.component.activeItem,\n  };\n}\n\nexport default connect(mapStateToProps)(Themes);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Menu from './Menu';\nimport Games from './Games';\nimport Setting from './Setting';\nimport Coverflow from './Coverflow';\nimport Music from './Music';\nimport Artist from './Artist';\nimport Album from './Album';\nimport Playing from './Playing';\nimport MoreSettings from './MoreSettings';\nimport Themes from './Themes';\nimport '../assets/css/screen.css';\n\n// render screen of IPOD\n// depend on different active component in received from props these will set the component on screen\nclass Screen extends Component {\n  render() {\n    const { activeComponent, activeItem } = this.props;\n    return (\n      <div className=\"screen-container\">\n        {activeComponent === 'Coverflow' && <Coverflow />}\n        {activeComponent === 'Menu' && <Menu activeItem={activeItem} />}\n        {activeComponent === 'Music' && <Music activeItem={activeItem} />}\n        {activeComponent === 'Games' && <Games />}\n        {activeComponent === 'Setting' && <Setting />}\n        {activeComponent === 'Artist' && <Artist />}\n        {activeComponent === 'Album' && <Album />}\n        {activeComponent === 'All Music' && <Playing />}\n        {activeComponent === 'More Settings' && <MoreSettings />}\n        {activeComponent === 'Themes' && <Themes />}\n      </div>\n    );\n  }\n}\n\n// mapping activeComponent and activeItem from store to the props of screen\nfunction mapStateToProps(state) {\n  return {\n    activeComponent: state.component.activeComponent,\n    activeItem: state.component.activeItem,\n  };\n}\n\n// connecting props from store to screen\nexport default connect(mapStateToProps)(Screen);\n","import { CHANGE_COMPONENT, CHANGE_ACTIVE_ITEM } from './actionTypes';\n\n//action creator for changing component to the current component passed\nexport function changeComponent(component) {\n  return {\n    type: CHANGE_COMPONENT,\n    component,\n  };\n}\n\n//action creator for changing active item to the current item passed\nexport function changeActiveItem(item) {\n  return {\n    type: CHANGE_ACTIVE_ITEM,\n    item,\n  };\n}\n","//action types to change component and active item of the component\nexport const CHANGE_COMPONENT = 'CHANGE_COMPONENT';\nexport const CHANGE_ACTIVE_ITEM = 'CHANGE_ACTIVE_ITEM';\n\n//to pause and play song\nexport const PLAY_SONG = 'PLAY_SONG';\nexport const PAUSE_SONG = 'PAUSE_SONG';\n\n//to change theme\nexport const CHANGE_THEME = 'CHANGE_THEME';\n","import React, { Component } from 'react';\nimport ZingTouch from 'zingtouch';\nimport '../assets/css/buttons.css';\nimport { connect } from 'react-redux';\n\n// importing action creators to perform different actions\nimport { changeComponent } from '../actions/component';\nimport { changeActiveItem } from '../actions/component';\nimport { playSong, pauseSong } from '../actions/song';\n\n// importing action creator to change theme\nimport { changeTheme } from '../actions/theme';\n\n// renders button component to show all buttons\nclass Buttons extends Component {\n  constructor(props) {\n    super(props);\n    // defined is used to maintain that region is already defined once and will not be defined again\n    this.defined = false;\n    // reference to the container of jsx from where to create region for gesture\n    this.zingRegion = React.createRef();\n    this.region = null;\n    // reference to inner container that wil be binded to gesture region\n    this.inner = React.createRef();\n  }\n\n  //creating region to work gesture in that region on component mounting\n  componentDidMount() {\n    this.region = new ZingTouch.Region(this.zingRegion.current);\n  }\n\n  // channing defined to false when component is unmounted\n  componentWillUnmount() {\n    this.defined = false;\n  }\n\n  // on clicking menu button changing active component on screen to menu\n  handleMenuButton = () => {\n    this.props.dispatch(changeComponent('Menu'));\n  };\n\n  // if active component is music then pausing and playing song on clicking pause play button\n  handlePausePlayButton = () => {\n    const { playing, dispatch } = this.props;\n    const { activeComponent } = this.props.component;\n    if (activeComponent !== 'All Music') {\n      return;\n    }\n    if (playing === true) {\n      dispatch(pauseSong());\n    } else {\n      dispatch(playSong());\n    }\n  };\n\n  handleCenterButton = () => {\n    const { dispatch, playing } = this.props;\n    const { activeComponent, activeItem } = this.props.component;\n    // if active component is playing then center button will also pause and play song like pause play button\n    if (activeComponent === 'All Music') {\n      if (playing === true) {\n        dispatch(pauseSong());\n      } else {\n        dispatch(playSong());\n      }\n      return;\n    } else if (\n      activeComponent === 'Menu' ||\n      activeComponent === 'Music' ||\n      activeComponent === 'Setting'\n    ) {\n      dispatch(changeComponent(activeItem));\n    } else if (activeComponent === 'Themes') {\n      dispatch(changeTheme(activeItem));\n    }\n  };\n\n  //changing active item of menu component in forward direction\n  forwardMoveMenuComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Coverflow') {\n      dispatch(changeActiveItem('Music'));\n    } else if (activeItem === 'Music') {\n      dispatch(changeActiveItem('Games'));\n    } else if (activeItem === 'Games') {\n      dispatch(changeActiveItem('Setting'));\n    } else if (activeItem === 'Setting') {\n      dispatch(changeActiveItem('Coverflow'));\n    }\n  };\n\n  //changing active item of menu component in backward direction\n  backwardMoveMenuComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Coverflow') {\n      dispatch(changeActiveItem('Setting'));\n    } else if (activeItem === 'Music') {\n      dispatch(changeActiveItem('Coverflow'));\n    } else if (activeItem === 'Games') {\n      dispatch(changeActiveItem('Music'));\n    } else if (activeItem === 'Setting') {\n      dispatch(changeActiveItem('Games'));\n    }\n  };\n\n  //changing active item of music component in forward direction\n  forwardMoveMusicComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'All Music') {\n      dispatch(changeActiveItem('Artist'));\n    } else if (activeItem === 'Artist') {\n      dispatch(changeActiveItem('Album'));\n    } else if (activeItem === 'Album') {\n      dispatch(changeActiveItem('All Music'));\n    }\n  };\n\n  // changing active item of music component in backward direction\n  backwardMoveMusicComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'All Music') {\n      dispatch(changeActiveItem('Album'));\n    } else if (activeItem === 'Artist') {\n      dispatch(changeActiveItem('All Music'));\n    } else if (activeItem === 'Album') {\n      dispatch(changeActiveItem('Artist'));\n    }\n  };\n\n  // changing active item of setting component in forward direction\n  forwardMoveSettingComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Themes') {\n      dispatch(changeActiveItem('More Settings'));\n    } else if (activeItem === 'More Settings') {\n      dispatch(changeActiveItem('Themes'));\n    }\n  };\n\n  // changing active item of setting component in backward direction\n  backwardMoveSettingComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Themes') {\n      dispatch(changeActiveItem('More Settings'));\n    } else if (activeItem === 'More Settings') {\n      dispatch(changeActiveItem('Themes'));\n    }\n  };\n\n  //changing active item of themes component in forward direction\n  forwardMoveThemesComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Marshmello') {\n      dispatch(changeActiveItem('Striker'));\n    } else if (activeItem === 'Striker') {\n      dispatch(changeActiveItem('Virtue'));\n    } else if (activeItem === 'Virtue') {\n      dispatch(changeActiveItem('Marshmello'));\n    }\n  };\n\n  // changing activce item of themes component in backward direction\n  backwardMoveThemesComponent = () => {\n    const { dispatch } = this.props;\n    const { activeItem } = this.props.component;\n    if (activeItem === 'Marshmello') {\n      dispatch(changeActiveItem('Virtue'));\n    } else if (activeItem === 'Striker') {\n      dispatch(changeActiveItem('Marshmello'));\n    } else if (activeItem === 'Virtue') {\n      dispatch(changeActiveItem('Striker'));\n    }\n  };\n\n  // rotating item on the basis of angle travelled\n  // function to rotate item\n  rotate = (target) => {\n    let angleChange = 0;\n    let distance = 0;\n    // keeping old this so that we can call backward and forward move function of class\n    let oldThis = this;\n    // binding rotatable region to rotate of zingtouch library\n    // this value changes inside region.bind as it a callback\n    this.region.bind(target, 'rotate', function (event) {\n      let currentDistance = event.detail.distanceFromLast;\n      if (distance === 0) {\n        distance = currentDistance;\n      } else {\n        if (currentDistance > 0 && distance < 0) {\n          angleChange = 0;\n          distance = 0;\n        } else if (currentDistance < 0 && distance > 0) {\n          angleChange = 0;\n          distance = 0;\n        }\n      }\n      angleChange++;\n      // if anglechange is 15 then rotate the item towards forward if angle is greater then zero\n      // if anglechange is 15 then rotate the item towards backward if angle is less then zero\n      if (angleChange === 15) {\n        angleChange = 0;\n        const { activeComponent } = oldThis.props.component;\n        if (distance < 0) {\n          // calling movement fuction of active item with old this on the basis of current component to move selected active item\n          //changing active item item according to active Component\n          if (activeComponent === 'Menu') {\n            oldThis.backwardMoveMenuComponent();\n          } else if (activeComponent === 'Music') {\n            oldThis.backwardMoveMusicComponent();\n          } else if (activeComponent === 'Setting') {\n            oldThis.backwardMoveSettingComponent();\n          } else if (activeComponent === 'Themes') {\n            oldThis.backwardMoveThemesComponent();\n          }\n        } else {\n          if (activeComponent === 'Menu') {\n            oldThis.forwardMoveMenuComponent();\n          } else if (activeComponent === 'Music') {\n            oldThis.forwardMoveMusicComponent();\n          } else if (activeComponent === 'Setting') {\n            oldThis.forwardMoveSettingComponent();\n          } else if (activeComponent === 'Themes') {\n            oldThis.forwardMoveThemesComponent();\n          }\n        }\n      }\n    });\n  };\n\n  // using these function to create zing region on mouse over once if not created and if created then it will not be called\n  rotateUsingZing = () => {\n    if (this.defined === false) {\n      this.defined = true;\n      this.rotate(this.inner.current);\n    }\n  };\n\n  // rendering button component\n  render() {\n    const { styles } = this.props;\n    return (\n      <div className=\"button-container\">\n        <div className=\"button-region-container\" ref={this.zingRegion}>\n          <div\n            className=\"inner-button-container\"\n            onMouseOver={this.rotateUsingZing}\n            ref={this.inner}\n            style={styles}\n          >\n            <div className=\"up-button-container\">\n              <div\n                className=\"button menu-button\"\n                onClick={this.handleMenuButton}\n              >\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/833/833473.svg\"\n                  alt=\"menu-button\"\n                ></img>\n              </div>\n            </div>\n            <div className=\"center-button-container\">\n              <div className=\"button backward-button\">\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/915/915516.svg\"\n                  alt=\"backward-button\"\n                ></img>\n              </div>\n              <div\n                className=\"button center-button\"\n                onClick={this.handleCenterButton}\n              >\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/323/323308.svg\"\n                  alt=\"center-button\"\n                ></img>\n              </div>\n              <div className=\"button forward-button\">\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/915/915517.svg\"\n                  alt=\"forward-button\"\n                ></img>\n              </div>\n            </div>\n            <div className=\"down-button-container\">\n              <div\n                className=\"button pause-play-button\"\n                onClick={this.handlePausePlayButton}\n              >\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/1792/1792886.svg\"\n                  alt=\"pause-play-button\"\n                ></img>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// using store to map required props to above component\nfunction mapStateToProps(state) {\n  return {\n    component: state.component,\n    playing: state.song.isSongPlaying,\n    styles: state.theme.circle_background,\n  };\n}\n\n// connecting required props using connect to buttons\nexport default connect(mapStateToProps)(Buttons);\n","import { PLAY_SONG, PAUSE_SONG } from './actionTypes';\n\n//action creator for playing song\nexport function playSong() {\n  return {\n    type: PLAY_SONG,\n  };\n}\n\n// action creator for pausing song\nexport function pauseSong() {\n  return {\n    type: PAUSE_SONG,\n  };\n}\n","import { CHANGE_THEME } from './actionTypes';\n\n//action creator for theme\nexport function changeTheme(theme) {\n  return {\n    type: CHANGE_THEME,\n    theme,\n  };\n}\n","import React, { Component } from 'react';\nimport '../assets/css/ipod.css';\nimport Screen from './Screen';\nimport Buttons from './Buttons';\nimport { connect } from 'react-redux';\n\n// renders the main ipod component in two parts\n// first part is screen of IPOD which show different component\n// second part is button component which perform actions on screen\nclass Ipod extends Component {\n  constructor(props) {\n    super(props);\n    //using state to maintain active component and  active item in menu or music list\n    this.state = {\n      activeComponent: 'Menu',\n      activeItem: 'Music',\n    };\n  }\n\n  render() {\n    const { styles } = this.props;\n    return (\n      <div className=\"container\" style={styles}>\n        <Screen\n          activeComponent={this.state.activeComponent}\n          activeItem={this.state.activeItem}\n        />\n        <Buttons />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.ipod_background,\n  };\n}\nexport default connect(mapStateToProps)(Ipod);\n","import React from 'react';\nimport '../assets/css/app.css';\nimport Ipod from './Ipod';\nimport { connect } from 'react-redux';\n\n//this compoonent is just the outer container component of IPOD so set the main background\n// this component renders the main IPOD to the display\n\nclass App extends React.Component {\n  render() {\n    const { styles } = this.props;\n    return (\n      <div className=\"app\" style={styles}>\n        <Ipod />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    styles: state.theme.background,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { CHANGE_COMPONENT, CHANGE_ACTIVE_ITEM } from '../actions/actionTypes';\n\n// component reducer initial state to render menu component on loading IPOD\nconst initialState = {\n  activeComponent: 'Themes',\n  activeItem: 'Marshmello',\n};\n\nexport default function changingComponent(state = initialState, action) {\n  switch (action.type) {\n    // case to change the component on the basis of component received in props\n    case CHANGE_COMPONENT: {\n      // if we are changing active component to menu then we need to change active item to coverflow\n      if (action.component === 'Menu') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'Coverflow',\n        };\n      } // if we are changing active component to music then we need to change active item to All Music\n      else if (action.component === 'Music') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'All Music',\n        };\n        // if we are changing active component to setting then we need to change active item to themes\n      } else if (action.component === 'Setting') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'Themes',\n        };\n      } else if (action.component === 'Themes') {\n        return {\n          ...state,\n          activeComponent: action.component,\n          activeItem: 'Marshmello',\n        };\n      }\n      // changing to other component\n      else {\n        return {\n          state,\n          activeComponent: action.component,\n        };\n      }\n    }\n    // case to change active item of menu or music component\n    case CHANGE_ACTIVE_ITEM: {\n      return {\n        ...state,\n        activeItem: action.item,\n      };\n    }\n    // default case to render menu component when IPOD is loaded initially\n    default: {\n      return state;\n    }\n  }\n}\n","import { PLAY_SONG, PAUSE_SONG } from '../actions/actionTypes';\nimport song from '../assets/songs/she_move.mp3';\n\n// song reducer intial state to maintain song status\nconst initialState = {\n  isSongPlaying: false,\n  song: new Audio(song),\n};\n\n// changing store on the basis of different actions\nexport default function changingComponent(state = initialState, action) {\n  switch (action.type) {\n    // case to change song playing status to play\n    case PLAY_SONG: {\n      return {\n        ...state,\n        isSongPlaying: true,\n      };\n    }\n    // case to change song playing status to pause\n    case PAUSE_SONG: {\n      return {\n        ...state,\n        isSongPlaying: false,\n      };\n    }\n    // returning default pause status of song\n    default: {\n      return state;\n    }\n  }\n}\n","export const marshmello = {\n  background: { backgroundColor: '#f5c8cf' },\n  ipod_background: {\n    backgroundImage: 'linear-gradient(to right, #396570, #1c7187, #184b58)',\n  },\n  circle_background: {\n    backgroundImage: 'linear-gradient(to right, #e5b17a, #c66d18, #f3be8c)',\n  },\n  menu: {\n    menu: {\n      backgroundColor: '#fcffe3a1',\n    },\n    active: {\n      backgroundImage: 'linear-gradient(to right, #cd2f0b, #b22100, #992409)',\n      color: 'white',\n    },\n  },\n};\n\nexport const striker = {\n  background: { backgroundColor: 'yellow' },\n  ipod_background: {\n    backgroundImage: 'linear-gradient(to right, blue, blue, black)',\n  },\n  circle_background: {\n    backgroundImage: 'linear-gradient(to right, red, red, orange)',\n  },\n  menu: {\n    menu: {\n      backgroundColor: 'white',\n    },\n    active: {\n      backgroundImage: 'linear-gradient(to right, green, green, pink)',\n      color: 'white',\n    },\n  },\n};\n\nexport const virtue = {\n  background: { backgroundColor: 'lightpink' },\n  ipod_background: {\n    backgroundImage: 'linear-gradient(to right, red, red, pink)',\n  },\n  circle_background: {\n    backgroundImage: 'linear-gradient(to right, black, black, black)',\n  },\n  menu: {\n    menu: {\n      backgroundColor: 'navy',\n    },\n    active: {\n      backgroundImage: 'linear-gradient(to right, orange, orange, blue)',\n      color: 'white',\n    },\n  },\n};\n","import { CHANGE_THEME } from '../actions/actionTypes';\nimport { marshmello, virtue, striker } from '../data/themes';\n\n// component reducer initial state to render menu component on loading IPOD\nconst initialState = {\n  background: { backgroundColor: '#f5c8cf' },\n  ipod_background: {\n    backgroundImage: 'linear-gradient(to right, #396570, #1c7187, #184b58)',\n  },\n  circle_background: {\n    backgroundImage: 'linear-gradient(to right, #e5b17a, #c66d18, #f3be8c)',\n  },\n  menu: {\n    menu: {\n      backgroundColor: '#fcffe3a1',\n    },\n    active: {\n      backgroundImage: 'linear-gradient(to right, #cd2f0b, #b22100, #992409)',\n      color: 'white',\n    },\n  },\n};\n\nexport default function changingComponent(state = initialState, action) {\n  switch (action.type) {\n    // case to change the theme on the basis of theme received in action\n    case CHANGE_THEME: {\n      if (action.theme === 'Striker') {\n        return striker;\n      } else if (action.theme === 'Virtue') {\n        return virtue;\n      } else {\n        return marshmello;\n      }\n    }\n    // default case to render marshmello theme when IPOD is loaded initially\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport component from './component';\nimport song from './song';\nimport theme from './theme';\n\n// setting both the reducer in as single reducer in store\nexport default combineReducers({\n  component,\n  song,\n  theme,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { configureStore } from './store';\nimport { Provider } from 'react-redux';\nimport './assets/css/index.css';\n\n//configuring new store\nconst store = configureStore();\n// passing store to app using provider\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nlet store;\n\n// creating store to maintain status using combine reducer\nexport function configureStore() {\n  store = createStore(reducer);\n  return store;\n}\n"],"sourceRoot":""}